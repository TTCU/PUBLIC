/* TTCU chat widget, collision-safe */
(function () {
  "use strict";

  // config and state
  var CFG = window.__ttcuChatConfig || {};
  var STATE = { built: false, open: false, url: CFG.url || "https://example.com/chat" };
  var OPT = {
    title: CFG.title || "Goal Digger",
    position: CFG.position === "left" ? "left" : "right",
    width: CFG.width || 360,
    height: CFG.height || 600,
    maxWidth: CFG.maxWidth || 420,
    maxHeight: CFG.maxHeight || 680,
    zIndex: CFG.zIndex || 2147483647,
    launcher: CFG.launcher !== false,
    headerHeight: 44,
    cornerRadius: 14,
    gap: 16
  };

  function ttcuById(id) { return document.getElementById(id); }

  function ttcuCssText() {
    var side = OPT.position;
    return ""
      + ":root{--ttcu-chat-width:" + OPT.width + "px;--ttcu-chat-height:" + OPT.height + "px;"
      + "--ttcu-chat-radius:" + OPT.cornerRadius + "px;--ttcu-chat-shadow:0 12px 32px rgba(0,0,0,.22);"
      + "--ttcu-chat-border:1px solid rgba(0,0,0,.08);--ttcu-gap:" + OPT.gap + "px;--ttcu-header-h:" + OPT.headerHeight + "px}"
      + "#ttcuChatLauncher{position:fixed;" + side + ":var(--ttcu-gap);bottom:var(--ttcu-gap);width:56px;height:56px;border:0;border-radius:50%;background:#0f6cf2;color:#fff;box-shadow:var(--ttcu-chat-shadow);cursor:pointer;z-index:" + (OPT.zIndex - 1) + ";display:flex;align-items:center;justify-content:center;font-size:22px}"
      + "#ttcuChatPanel{position:fixed;" + side + ":var(--ttcu-gap);bottom:calc(var(--ttcu-gap) + 64px);width:var(--ttcu-chat-width);height:var(--ttcu-chat-height);max-width:min(95vw," + OPT.maxWidth + "px);max-height:min(80vh," + OPT.maxHeight + "px);background:#fff;border:var(--ttcu-chat-border);border-radius:var(--ttcu-chat-radius);box-shadow:var(--ttcu-chat-shadow);overflow:hidden;transform:translateY(16px);opacity:0;pointer-events:none;transition:transform .2s ease,opacity .2s ease;z-index:" + OPT.zIndex + "}"
      + "#ttcuChatPanel.open{transform:translateY(0);opacity:1;pointer-events:auto}"
      + "#ttcuChatHeader{height:var(--ttcu-header-h);display:flex;align-items:center;justify-content:space-between;padding:0 10px 0 12px;border-bottom:1px solid rgba(0,0,0,.06);background:linear-gradient(0deg,#fff,#fafafa);font:600 14px/1.2 system-ui,-apple-system,Segoe UI,Roboto,Arial;color:#1f2937}"
      + "#ttcuChatHeader .actions{display:flex;gap:4px}"
      + "#ttcuChatHeader button{width:28px;height:28px;border:0;border-radius:8px;background:transparent;cursor:pointer;font-size:16px;color:#4b5563}"
      + "#ttcuChatHeader button:hover{background:rgba(15,108,242,.08);color:#0f6cf2}"
      + "#ttcuChatFrame{width:100%;height:calc(100% - var(--ttcu-header-h));border:0;display:block;background:#fff}"
      + "@media (max-width:640px){#ttcuChatLauncher{" + side + ":max(var(--ttcu-gap),env(safe-area-inset-" + side + "));bottom:max(var(--ttcu-gap),env(safe-area-inset-bottom))}"
      + "#ttcuChatPanel{" + side + ":max(var(--ttcu-gap),env(safe-area-inset-" + side + "));"
      + (side === "right" ? "left:max(var(--ttcu-gap),env(safe-area-inset-left));" : "right:max(var(--ttcu-gap),env(safe-area-inset-right));")
      + "width:auto;height:min(75vh," + OPT.maxHeight + "px);bottom:calc(max(var(--ttcu-gap),env(safe-area-inset-bottom)) + 64px)}}";
  }

  function ttcuInjectStyles() {
    if (ttcuById("ttcu-chat-styles")) return;
    var s = document.createElement("style");
    s.id = "ttcu-chat-styles";
    s.textContent = ttcuCssText();
    document.head.appendChild(s);
  }

  function ttcuBuild() {
    if (STATE.built) return;
    ttcuInjectStyles();

    if (OPT.launcher && !ttcuById("ttcuChatLauncher")) {
      var launcher = document.createElement("button");
      launcher.id = "ttcuChatLauncher";
      launcher.title = "Chat";
      launcher.setAttribute("aria-label", "Open chat");
      launcher.innerHTML = '<svg width="26" height="26" viewBox="0 0 24 24" aria-hidden="true"><path fill="currentColor" d="M20 2H4a2 2 0 0 0-2 2v18l4-4h14a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Z"/></svg>';
      launcher.addEventListener("click", ttcuToggle);
      document.body.appendChild(launcher);
    }

    if (!ttcuById("ttcuChatPanel")) {
      var panel = document.createElement("div");
      panel.id = "ttcuChatPanel";
      panel.setAttribute("role", "dialog");
      panel.setAttribute("aria-modal", "false");

      var header = document.createElement("div");
      header.id = "ttcuChatHeader";
      header.innerHTML = '<div id="ttcuChatTitle"></div><div class="actions"><button id="ttcuChatMin" title="Minimize" aria-label="Minimize">▾</button><button id="ttcuChatClose" title="Close" aria-label="Close">✕</button></div>';

      var frame = document.createElement("iframe");
      frame.id = "ttcuChatFrame";
      frame.src = STATE.url;

      panel.appendChild(header);
      panel.appendChild(frame);
      document.body.appendChild(panel);

      ttcuById("ttcuChatTitle").textContent = OPT.title;
      ttcuById("ttcuChatClose").addEventListener("click", ttcuClose);
      ttcuById("ttcuChatMin").addEventListener("click", ttcuToggle);

      document.addEventListener("keydown", function (e) {
        if (e.key === "Escape") ttcuClose();
      });
    }

    STATE.built = true;
  }

  function ttcuOpen() {
    ttcuBuild();
    var p = ttcuById("ttcuChatPanel");
    if (p) { p.classList.add("open"); STATE.open = true; }
  }

  function ttcuClose() {
    var p = ttcuById("ttcuChatPanel");
    if (p) { p.classList.remove("open"); STATE.open = false; }
  }

  function ttcuToggle() {
    if (STATE.built && STATE.open) ttcuClose();
    else ttcuOpen();
  }

  function ttcuSetUrl(url) {
    STATE.url = url;
    var f = ttcuById("ttcuChatFrame");
    if (f) f.src = url;
  }

  // read params from current script url, then merge with CFG
  (function initFromQuery() {
    var scriptEl = document.currentScript || (function () {
      var arr = document.getElementsByTagName("script");
      return arr[arr.length - 1];
    })();
    var srcUrl = scriptEl && scriptEl.src ? new URL(scriptEl.src) : null;
    var qs = srcUrl ? new URLSearchParams(srcUrl.search) : new URLSearchParams();
    var params = {
      url: qs.get("u") || STATE.url,
      title: qs.get("t") || OPT.title,
      position: qs.get("p") === "left" ? "left" : "right",
      width: +(qs.get("w") || OPT.width),
      height: +(qs.get("h") || OPT.height),
      maxWidth: +(qs.get("mw") || OPT.maxWidth),
      maxHeight: +(qs.get("mh") || OPT.maxHeight),
      zIndex: +(qs.get("z") || OPT.zIndex),
      launcher: qs.get("l") !== "0",
      eager: qs.get("e") === "1"
    };
    OPT = Object.assign({}, OPT, window.__ttcuChatConfig || {}, params);
    STATE.url = OPT.url;
  })();

  // public api
  window.ttcuChat = {
    open: ttcuOpen,
    close: ttcuClose,
    toggle: ttcuToggle,
    setUrl: ttcuSetUrl,
    isOpen: function () { return !!STATE.open; }
  };

  // default wiring
  document.addEventListener("chat.desktop.clicked", function () { ttcuToggle(); });
  if (CFG.eager) ttcuBuild();
  if (CFG.url) ttcuSetUrl(CFG.url);
})();
